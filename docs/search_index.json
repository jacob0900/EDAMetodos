[["index.html", "EDA METODOS Chapter 1 Presentacion del problema", " EDA METODOS Jacobo Londoño, Jesus David Barrios, Samuel Chamorro 2025-08-13 Chapter 1 Presentacion del problema En el dia de hoy mi grupo y yo daremos solución a un problema el cual perturba muchos hogares al rededor del mundo el cual es el cáncer de mama, aunque por limitaciones dadas por el curso realizaremos un EDA basados en subconjunto de datos que se nos presenta. Este proyecto se dividira en 8 fases: Carga de datos Exploración inicial Limpieza de datos Análisis univariante Análisis bivariante Análisis multivariante Conclusiones Posibles formas de proceder con la solución de la problemática "],["carga-de-datos.html", "Chapter 2 Carga de datos", " Chapter 2 Carga de datos En esta parte del book realizaremos la importación del subconjunto de datos y ilustraremos a groso modo el estado en el que se encuentran los datos # Cargar librerías necesarias library(knitr) ## Warning: package &#39;knitr&#39; was built under R version 4.4.3 library(kableExtra) ## Warning: package &#39;kableExtra&#39; was built under R version 4.4.3 library(dplyr) ## ## Adjuntando el paquete: &#39;dplyr&#39; ## The following object is masked from &#39;package:kableExtra&#39;: ## ## group_rows ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union library(ggplot2) ## Warning: package &#39;ggplot2&#39; was built under R version 4.4.3 library(readxl) library(tibble) library(readr) library(Amelia) ## Warning: package &#39;Amelia&#39; was built under R version 4.4.3 ## Cargando paquete requerido: Rcpp ## ## ## ## Amelia II: Multiple Imputation ## ## (Version 1.8.3, built: 2024-11-07) ## ## Copyright (C) 2005-2025 James Honaker, Gary King and Matthew Blackwell ## ## Refer to http://gking.harvard.edu/amelia/ for more information ## ## library(reshape2) ## Warning: package &#39;reshape2&#39; was built under R version 4.4.3 library(gridExtra) ## Warning: package &#39;gridExtra&#39; was built under R version 4.4.3 ## ## Adjuntando el paquete: &#39;gridExtra&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## combine library(GGally) ## Warning: package &#39;GGally&#39; was built under R version 4.4.3 # Cargar datos url &lt;- &quot;https://raw.githubusercontent.com/jacob0900/EDAMetodos/main/wdbc.csv&quot; datos &lt;- read.csv(url, header = TRUE) # Asignar nombres correctos a las columnas colnames(datos) &lt;- c( &quot;ID&quot;, &quot;Diagnosis&quot;, &quot;radius1&quot;, &quot;texture1&quot;, &quot;perimeter1&quot;, &quot;area1&quot;, &quot;smoothness1&quot;, &quot;compactness1&quot;, &quot;concavity1&quot;, &quot;concave_points1&quot;, &quot;symmetry1&quot;, &quot;fractal_dimension1&quot;, &quot;radius2&quot;, &quot;texture2&quot;, &quot;perimeter2&quot;, &quot;area2&quot;, &quot;smoothness2&quot;, &quot;compactness2&quot;, &quot;concavity2&quot;, &quot;concave_points2&quot;, &quot;symmetry2&quot;, &quot;fractal_dimension2&quot;, &quot;radius3&quot;, &quot;texture3&quot;, &quot;perimeter3&quot;, &quot;area3&quot;, &quot;smoothness3&quot;, &quot;compactness3&quot;, &quot;concavity3&quot;, &quot;concave_points3&quot;, &quot;symmetry3&quot;, &quot;fractal_dimension3&quot; ) # Crear dataset optimizado (df) con solo las variables principales df &lt;- datos %&gt;% select(ID, Diagnosis, radius1, texture1, perimeter1, area1, smoothness1, compactness1, concavity1, concave_points1, symmetry1, fractal_dimension1) head(df) ## ID Diagnosis radius1 texture1 perimeter1 area1 smoothness1 ## 1 842302 M 17.99 10.38 122.80 1001.0 0.11840 ## 2 842517 M 20.57 17.77 132.90 1326.0 0.08474 ## 3 84300903 M 19.69 21.25 130.00 1203.0 0.10960 ## 4 84348301 M 11.42 20.38 77.58 386.1 0.14250 ## 5 84358402 M 20.29 14.34 135.10 1297.0 0.10030 ## 6 843786 M 12.45 15.70 82.57 477.1 0.12780 ## compactness1 concavity1 concave_points1 symmetry1 fractal_dimension1 ## 1 0.27760 0.3001 0.14710 0.2419 0.07871 ## 2 0.07864 0.0869 0.07017 0.1812 0.05667 ## 3 0.15990 0.1974 0.12790 0.2069 0.05999 ## 4 0.28390 0.2414 0.10520 0.2597 0.09744 ## 5 0.13280 0.1980 0.10430 0.1809 0.05883 ## 6 0.17000 0.1578 0.08089 0.2087 0.07613 Después de haber cargado el subconjunto de datos daremos una organización y descripción de las variables siempre recordando que nuestra piedra angular de nuestro estudio es la variable “Diagnosis” # Crear el data frame con la información de las variables tabla_variables &lt;- data.frame( Variable = c( &quot;ID&quot;, &quot;Diagnosis&quot;, &quot;radius1&quot;, &quot;texture1&quot;, &quot;perimeter1&quot;, &quot;area1&quot;, &quot;smoothness1&quot;, &quot;compactness1&quot;, &quot;concavity1&quot;, &quot;concave_points1&quot;, &quot;symmetry1&quot;, &quot;fractal_dimension1&quot; ), Tipo = c( &quot;Categórica nominal&quot;, &quot;Categórica nominal&quot;, rep(&quot;Numérica continua&quot;, 10) ), Definición = c( &quot;Identificador único de la muestra&quot;, &quot;Diagnóstico del tumor: Maligno (M) o Benigno (B)&quot;, &quot;Media de distancias desde el centro al perímetro del núcleo celular&quot;, &quot;Media de desviación estándar de valores de escala de grises&quot;, &quot;Media del perímetro del núcleo celular&quot;, &quot;Media del área del núcleo celular&quot;, &quot;Media de variación local en longitudes de radio&quot;, &quot;Media de compacidad (perímetro²/área - 1.0)&quot;, &quot;Media de severidad de porciones cóncavas del contorno&quot;, &quot;Media de número de porciones cóncavas del contorno&quot;, &quot;Media de simetría del núcleo celular&quot;, &quot;Media de dimensión fractal (&#39;aproximación a la costa&#39;)&quot; ), `Escala de Medición` = c( &quot;Nominal&quot;, &quot;Nominal&quot;, rep(&quot;Razón&quot;, 10) ), check.names = FALSE ) # Crear tabla formateada para bookdown kable(tabla_variables, caption = &quot;Descripción de Variables del Dataset WDBC (Wisconsin Diagnostic Breast Cancer)&quot;, booktabs = TRUE, longtable = TRUE) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;), latex_options = c(&quot;striped&quot;, &quot;hold_position&quot;), full_width = FALSE, font_size = 10) %&gt;% column_spec(1, bold = TRUE, width = &quot;2.5cm&quot;) %&gt;% column_spec(2, width = &quot;3cm&quot;) %&gt;% column_spec(3, width = &quot;8cm&quot;) %&gt;% column_spec(4, width = &quot;2cm&quot;) Table 2.1: Table 2.2: Descripción de Variables del Dataset WDBC (Wisconsin Diagnostic Breast Cancer) Variable Tipo Definición Escala de Medición ID Categórica nominal Identificador único de la muestra Nominal Diagnosis Categórica nominal Diagnóstico del tumor: Maligno (M) o Benigno (B) Nominal radius1 Numérica continua Media de distancias desde el centro al perímetro del núcleo celular Razón texture1 Numérica continua Media de desviación estándar de valores de escala de grises Razón perimeter1 Numérica continua Media del perímetro del núcleo celular Razón area1 Numérica continua Media del área del núcleo celular Razón smoothness1 Numérica continua Media de variación local en longitudes de radio Razón compactness1 Numérica continua Media de compacidad (perímetro²/área - 1.0) Razón concavity1 Numérica continua Media de severidad de porciones cóncavas del contorno Razón concave_points1 Numérica continua Media de número de porciones cóncavas del contorno Razón symmetry1 Numérica continua Media de simetría del núcleo celular Razón fractal_dimension1 Numérica continua Media de dimensión fractal (‘aproximación a la costa’) Razón "],["exploración-inicial.html", "Chapter 3 Exploración inicial 3.1 Impresión general de los datos 3.2 Inspección de la estructura 3.3 Dimensión de los datos", " Chapter 3 Exploración inicial 3.1 Impresión general de los datos head(df) ## ID Diagnosis radius1 texture1 perimeter1 area1 smoothness1 ## 1 842302 M 17.99 10.38 122.80 1001.0 0.11840 ## 2 842517 M 20.57 17.77 132.90 1326.0 0.08474 ## 3 84300903 M 19.69 21.25 130.00 1203.0 0.10960 ## 4 84348301 M 11.42 20.38 77.58 386.1 0.14250 ## 5 84358402 M 20.29 14.34 135.10 1297.0 0.10030 ## 6 843786 M 12.45 15.70 82.57 477.1 0.12780 ## compactness1 concavity1 concave_points1 symmetry1 fractal_dimension1 ## 1 0.27760 0.3001 0.14710 0.2419 0.07871 ## 2 0.07864 0.0869 0.07017 0.1812 0.05667 ## 3 0.15990 0.1974 0.12790 0.2069 0.05999 ## 4 0.28390 0.2414 0.10520 0.2597 0.09744 ## 5 0.13280 0.1980 0.10430 0.1809 0.05883 ## 6 0.17000 0.1578 0.08089 0.2087 0.07613 str(df) ## &#39;data.frame&#39;: 569 obs. of 12 variables: ## $ ID : int 842302 842517 84300903 84348301 84358402 843786 844359 84458202 844981 84501001 ... ## $ Diagnosis : chr &quot;M&quot; &quot;M&quot; &quot;M&quot; &quot;M&quot; ... ## $ radius1 : num 18 20.6 19.7 11.4 20.3 ... ## $ texture1 : num 10.4 17.8 21.2 20.4 14.3 ... ## $ perimeter1 : num 122.8 132.9 130 77.6 135.1 ... ## $ area1 : num 1001 1326 1203 386 1297 ... ## $ smoothness1 : num 0.1184 0.0847 0.1096 0.1425 0.1003 ... ## $ compactness1 : num 0.2776 0.0786 0.1599 0.2839 0.1328 ... ## $ concavity1 : num 0.3001 0.0869 0.1974 0.2414 0.198 ... ## $ concave_points1 : num 0.1471 0.0702 0.1279 0.1052 0.1043 ... ## $ symmetry1 : num 0.242 0.181 0.207 0.26 0.181 ... ## $ fractal_dimension1: num 0.0787 0.0567 0.06 0.0974 0.0588 ... 3.2 Inspección de la estructura str(df) ## &#39;data.frame&#39;: 569 obs. of 12 variables: ## $ ID : int 842302 842517 84300903 84348301 84358402 843786 844359 84458202 844981 84501001 ... ## $ Diagnosis : chr &quot;M&quot; &quot;M&quot; &quot;M&quot; &quot;M&quot; ... ## $ radius1 : num 18 20.6 19.7 11.4 20.3 ... ## $ texture1 : num 10.4 17.8 21.2 20.4 14.3 ... ## $ perimeter1 : num 122.8 132.9 130 77.6 135.1 ... ## $ area1 : num 1001 1326 1203 386 1297 ... ## $ smoothness1 : num 0.1184 0.0847 0.1096 0.1425 0.1003 ... ## $ compactness1 : num 0.2776 0.0786 0.1599 0.2839 0.1328 ... ## $ concavity1 : num 0.3001 0.0869 0.1974 0.2414 0.198 ... ## $ concave_points1 : num 0.1471 0.0702 0.1279 0.1052 0.1043 ... ## $ symmetry1 : num 0.242 0.181 0.207 0.26 0.181 ... ## $ fractal_dimension1: num 0.0787 0.0567 0.06 0.0974 0.0588 ... 3.3 Dimensión de los datos dim(df) ## [1] 569 12 "],["limpieza-y-optimización-de-los-datos.html", "Chapter 4 Limpieza y optimización de los datos 4.1 Optimización de los datos 4.2 Limpieza de los datos", " Chapter 4 Limpieza y optimización de los datos 4.1 Optimización de los datos En el conjunto de datos de cáncer de mama, hemos identificado que múltiples variables representan mediciones redundantes de las mismas características nucleares subyacentes, donde cada atributo principal se expresa a través de tres variantes estadísticas: la media (sufijo 1), el error estándar (sufijo 2) y el valor máximo (sufijo 3). Esta estructura crea redundancia sustancial, ya que las versiones de error estándar y valores máximos son derivadas directamente de las mediciones medias y no aportan información independiente sobre nuevas características biológicas. Para optimizar los procesos analíticos, evitando multicolinealidad y reduciendo dimensionalidad sin pérdida de información esencial, utilizaremos exclusivamente las siguientes 10 variables de media (sufijo 1) como representantes canónicas de cada atributo nuclear: Variables representativas seleccionadas: radius1 → Representa: radius1, radius2, radius3 texture1 → Representa: texture1, texture2, texture3 perimeter1 → Representa: perimeter1, perimeter2, perimeter3 area1 → Representa: area1, area2, area3 smoothness1 → Representa: smoothness1, smoothness2, smoothness3 compactness1 → Representa: compactness1, compactness2, compactness3 concavity1 → Representa: concavity1, concavity2, concavity3 concave_points1 → Representa: concave_points1, concave_points2, concave_points3 symmetry1 → Representa: symmetry1, symmetry2, symmetry3 fractal_dimension1 → Representa: fractal_dimension1, fractal_dimension2, fractal_dimension3 Este enfoque estratégico reduce el espacio de características de 30 a 10 variables clave, preservando el 100% de las características morfológicas fundamentales mientras mejora significativamente la eficiencia computacional. 4.2 Limpieza de los datos 4.2.1 Valores faltantes En este inciso revisaremos los valores faltantes que contiene nuestro subconjunto de datos y propondremos una solución a esta problemática missmap(df) De manera casi milagrosa nuestro subconjunto de datos no presenta ningún tipo de valores faltantes. Por lo que no será necesario modificar nuestro subconjunto con ninguna técnica. 4.2.2 Valores Atípicos En esta parte revisaremos aquellos valores atípicos que se pueden generar y le daremos un tratamiento adecuado para poder culminar 4.2.2.1 Revisión de las variables categóricas # Verificación de ID (IDs únicos) cat(&quot;=== VERIFICACIÓN DE ID (IDENTIFICADORES) ===\\n&quot;) ## === VERIFICACIÓN DE ID (IDENTIFICADORES) === cat(&quot;Total de observaciones:&quot;, nrow(df), &quot;\\n&quot;) ## Total de observaciones: 569 cat(&quot;IDs únicos:&quot;, length(unique(df$ID)), &quot;\\n&quot;) ## IDs únicos: 569 cat(&quot;¿Hay IDs duplicados?&quot;, ifelse(length(unique(df$ID)) == nrow(df), &quot;NO&quot;, &quot;SÍ&quot;), &quot;\\n&quot;) ## ¿Hay IDs duplicados? NO if(length(unique(df$ID)) != nrow(df)) { duplicados &lt;- df$ID[duplicated(df$ID)] cat(&quot;IDs duplicados:&quot;, unique(duplicados), &quot;\\n&quot;) } cat(&quot;\\n=== VERIFICACIÓN DE Diagnosis (DIAGNÓSTICO) ===\\n&quot;) ## ## === VERIFICACIÓN DE Diagnosis (DIAGNÓSTICO) === cat(&quot;Valores únicos en Diagnosis:&quot;, unique(df$Diagnosis), &quot;\\n&quot;) ## Valores únicos en Diagnosis: M B cat(&quot;¿Solo contiene M y B?&quot;, ifelse(all(df$Diagnosis %in% c(&quot;M&quot;, &quot;B&quot;)), &quot;SÍ&quot;, &quot;NO&quot;), &quot;\\n&quot;) ## ¿Solo contiene M y B? SÍ # Tabla de frecuencias de diagnósticos tabla_diagnostico &lt;- table(df$Diagnosis) cat(&quot;Distribución de diagnósticos:\\n&quot;) ## Distribución de diagnósticos: print(tabla_diagnostico) ## ## B M ## 357 212 # Porcentajes cat(&quot;Porcentajes:\\n&quot;) ## Porcentajes: print(round(prop.table(tabla_diagnostico) * 100, 2)) ## ## B M ## 62.74 37.26 En este caso podemos observar que las variables categóricas no cuentan con valores atípicos ya que no hay ID repetidos y todos los diagnósticos están en la categoría permitida 4.2.2.2 Revisión de las variables numéricas # Seleccionar variables numéricas principales (excluyendo ID y Diagnosis) variables_numericas &lt;- c(&quot;radius1&quot;, &quot;texture1&quot;, &quot;perimeter1&quot;, &quot;area1&quot;, &quot;smoothness1&quot;, &quot;compactness1&quot;, &quot;concavity1&quot;, &quot;concave_points1&quot;, &quot;symmetry1&quot;, &quot;fractal_dimension1&quot;) # Verificar que las variables existen print(&quot;Variables seleccionadas para análisis de outliers:&quot;) ## [1] &quot;Variables seleccionadas para análisis de outliers:&quot; print(variables_numericas) ## [1] &quot;radius1&quot; &quot;texture1&quot; &quot;perimeter1&quot; ## [4] &quot;area1&quot; &quot;smoothness1&quot; &quot;compactness1&quot; ## [7] &quot;concavity1&quot; &quot;concave_points1&quot; &quot;symmetry1&quot; ## [10] &quot;fractal_dimension1&quot; print(&quot;¿Existen en el dataset?&quot;) ## [1] &quot;¿Existen en el dataset?&quot; print(variables_numericas %in% names(df)) ## [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE # Seleccionar solo las variables numéricas del dataset datos_outliers &lt;- df[, variables_numericas, drop = FALSE] # Transformar datos a formato largo para el gráfico datos_long &lt;- reshape2::melt(datos_outliers, variable.name = &quot;Variable&quot;, value.name = &quot;Valor&quot;) ## No id variables; using all as measure variables # Crear boxplot para detectar outliers ggplot(datos_long, aes(x = Variable, y = Valor)) + geom_boxplot(fill = &quot;lightblue&quot;, alpha = 0.7, outlier.colour = &quot;red&quot;, outlier.size = 1.5) + facet_wrap(~Variable, scales = &quot;free&quot;, ncol = 3) + labs(title = &quot;Detección de Valores Extremos por Variable&quot;, subtitle = &quot;Los puntos rojos indican posibles outliers&quot;, x = &quot;Variables&quot;, y = &quot;Valores&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) Dada la presencia de escalas dispares y posibles valores atípicos en las variables numéricas, como se observa en los gráficos con puntos rojos desplazados hacia extremos superiores, se decidió aplicar una transformación logarítmica para estabilizar la varianza, reducir el impacto de los outliers y homogeneizar los rangos intercuartílicos, evitando así sesgos al omitir o reemplazar datos. Esta elección es adecuada porque los datos parecen positivos y asimétricos a la derecha, lo que sugiere una distribución que se beneficiaría de la compresión de valores grandes y la normalización relativa, alineándose con el objetivo de facilitar análisis estadísticos sin perder representatividad. 4.2.2.2.1 Solución al problema con las variables numéricas # Variables a transformar (variables numéricas principales) variables_numericas &lt;- c(&quot;radius1&quot;, &quot;texture1&quot;, &quot;perimeter1&quot;, &quot;area1&quot;, &quot;smoothness1&quot;, &quot;compactness1&quot;, &quot;concavity1&quot;, &quot;concave_points1&quot;, &quot;symmetry1&quot;, &quot;fractal_dimension1&quot;) # Verificar si hay valores negativos o cero (problema para log) cat(&quot;=== VERIFICACIÓN PREVIA A TRANSFORMACIÓN LOG ===\\n&quot;) ## === VERIFICACIÓN PREVIA A TRANSFORMACIÓN LOG === for(var in variables_numericas) { min_val &lt;- min(df[[var]], na.rm = TRUE) cat(var, &quot;- Valor mínimo:&quot;, min_val, ifelse(min_val &lt;= 0, &quot; ⚠️ PROBLEMA PARA LOG&quot;, &quot; ✓ OK para LOG&quot;), &quot;\\n&quot;) } ## radius1 - Valor mínimo: 6.981 ✓ OK para LOG ## texture1 - Valor mínimo: 9.71 ✓ OK para LOG ## perimeter1 - Valor mínimo: 43.79 ✓ OK para LOG ## area1 - Valor mínimo: 143.5 ✓ OK para LOG ## smoothness1 - Valor mínimo: 0.05263 ✓ OK para LOG ## compactness1 - Valor mínimo: 0.01938 ✓ OK para LOG ## concavity1 - Valor mínimo: 0 ⚠️ PROBLEMA PARA LOG ## concave_points1 - Valor mínimo: 0 ⚠️ PROBLEMA PARA LOG ## symmetry1 - Valor mínimo: 0.106 ✓ OK para LOG ## fractal_dimension1 - Valor mínimo: 0.04996 ✓ OK para LOG # Crear datos transformados con log (solo si todos los valores son positivos) datos_log &lt;- df for(var in variables_numericas) { if(min(df[[var]], na.rm = TRUE) &gt; 0) { datos_log[[paste0(var, &quot;_log&quot;)]] &lt;- log(df[[var]]) } else { # Si hay valores &lt;= 0, usar log(x + constante) constante &lt;- abs(min(df[[var]])) + 1 datos_log[[paste0(var, &quot;_log&quot;)]] &lt;- log(df[[var]] + constante) cat(&quot;Variable&quot;, var, &quot;transformada con log(x +&quot;, constante, &quot;)\\n&quot;) } } ## Variable concavity1 transformada con log(x + 1 ) ## Variable concave_points1 transformada con log(x + 1 ) # Variables transformadas variables_log &lt;- paste0(variables_numericas, &quot;_log&quot;) # COMPARACIÓN: Datos originales vs transformados # Datos originales datos_orig_long &lt;- reshape2::melt(df[, variables_numericas], variable.name = &quot;Variable&quot;, value.name = &quot;Valor&quot;) ## No id variables; using all as measure variables datos_orig_long$Tipo &lt;- &quot;Original&quot; # Datos transformados datos_log_long &lt;- reshape2::melt(datos_log[, variables_log], variable.name = &quot;Variable&quot;, value.name = &quot;Valor&quot;) ## No id variables; using all as measure variables # Quitar &quot;_log&quot; del nombre para comparación datos_log_long$Variable &lt;- gsub(&quot;_log&quot;, &quot;&quot;, datos_log_long$Variable) datos_log_long$Tipo &lt;- &quot;Log transformado&quot; # Combinar datos datos_comparacion &lt;- rbind(datos_orig_long, datos_log_long) # Gráfico comparativo ggplot(datos_comparacion, aes(x = Variable, y = Valor, fill = Tipo)) + geom_boxplot(alpha = 0.7, outlier.size = 1, outlier.alpha = 0.6) + facet_grid(Tipo ~ Variable, scales = &quot;free&quot;) + labs(title = &quot;Comparación: Datos Originales vs Transformación Logarítmica&quot;, subtitle = &quot;La transformación log reduce la dispersión y outliers&quot;, x = &quot;Variables&quot;, y = &quot;Valores&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_fill_manual(values = c(&quot;Original&quot; = &quot;lightcoral&quot;, &quot;Log transformado&quot; = &quot;lightblue&quot;)) # Estadísticas comparativas cat(&quot;\\n=== COMPARACIÓN DE OUTLIERS: ANTES Y DESPUÉS ===\\n&quot;) ## ## === COMPARACIÓN DE OUTLIERS: ANTES Y DESPUÉS === for(i in 1:length(variables_numericas)) { var_orig &lt;- variables_numericas[i] var_log &lt;- variables_log[i] # Outliers originales Q1_orig &lt;- quantile(df[[var_orig]], 0.25) Q3_orig &lt;- quantile(df[[var_orig]], 0.75) IQR_orig &lt;- Q3_orig - Q1_orig outliers_orig &lt;- sum(df[[var_orig]] &lt; (Q1_orig - 1.5*IQR_orig) | df[[var_orig]] &gt; (Q3_orig + 1.5*IQR_orig)) # Outliers transformados Q1_log &lt;- quantile(datos_log[[var_log]], 0.25) Q3_log &lt;- quantile(datos_log[[var_log]], 0.75) IQR_log &lt;- Q3_log - Q1_log outliers_log &lt;- sum(datos_log[[var_log]] &lt; (Q1_log - 1.5*IQR_log) | datos_log[[var_log]] &gt; (Q3_log + 1.5*IQR_log)) cat(var_orig, &quot;:\\n&quot;) cat(&quot; Outliers originales:&quot;, outliers_orig, &quot;\\n&quot;) cat(&quot; Outliers después de log:&quot;, outliers_log, &quot;\\n&quot;) cat(&quot; Reducción:&quot;, outliers_orig - outliers_log, &quot;(&quot;, round((outliers_orig - outliers_log)/outliers_orig * 100, 1), &quot;%)\\n\\n&quot;) } ## radius1 : ## Outliers originales: 14 ## Outliers después de log: 6 ## Reducción: 8 ( 57.1 %) ## ## texture1 : ## Outliers originales: 7 ## Outliers después de log: 2 ## Reducción: 5 ( 71.4 %) ## ## perimeter1 : ## Outliers originales: 13 ## Outliers después de log: 6 ## Reducción: 7 ( 53.8 %) ## ## area1 : ## Outliers originales: 25 ## Outliers después de log: 5 ## Reducción: 20 ( 80 %) ## ## smoothness1 : ## Outliers originales: 6 ## Outliers después de log: 5 ## Reducción: 1 ( 16.7 %) ## ## compactness1 : ## Outliers originales: 16 ## Outliers después de log: 1 ## Reducción: 15 ( 93.8 %) ## ## concavity1 : ## Outliers originales: 18 ## Outliers después de log: 14 ## Reducción: 4 ( 22.2 %) ## ## concave_points1 : ## Outliers originales: 10 ## Outliers después de log: 8 ## Reducción: 2 ( 20 %) ## ## symmetry1 : ## Outliers originales: 15 ## Outliers después de log: 9 ## Reducción: 6 ( 40 %) ## ## fractal_dimension1 : ## Outliers originales: 15 ## Outliers después de log: 11 ## Reducción: 4 ( 26.7 %) "],["análisis-univariante.html", "Chapter 5 Análisis univariante 5.1 Variables numéricas 5.2 Variables categóricas", " Chapter 5 Análisis univariante 5.1 Variables numéricas # Análisis de radius1 cat(&quot;Estadísticas descriptivas de radius1:\\n&quot;) ## Estadísticas descriptivas de radius1: cat(&quot;Media:&quot;, mean(df$radius1), &quot;\\n&quot;) ## Media: 14.12729 cat(&quot;Mediana:&quot;, median(df$radius1), &quot;\\n&quot;) ## Mediana: 13.37 cat(&quot;Desviación estándar:&quot;, sd(df$radius1), &quot;\\n&quot;) ## Desviación estándar: 3.524049 cat(&quot;Rango intercuartílico:&quot;, IQR(df$radius1), &quot;\\n&quot;) ## Rango intercuartílico: 4.08 cat(&quot;Rango:&quot;, paste(range(df$radius1), collapse = &quot; - &quot;), &quot;\\n&quot;) ## Rango: 6.981 - 28.11 # Histograma básico ggplot(df, aes(x = radius1)) + geom_histogram(bins = 30, fill = &quot;skyblue&quot;, color = &quot;black&quot;) + theme_minimal() + labs(title = &quot;Histograma de radius1&quot;, x = &quot;Radius1&quot;, y = &quot;Frecuencia&quot;) # Histograma con densidad ggplot(df, aes(x = radius1, y = after_stat(density))) + geom_histogram(bins = 30, fill = &quot;lightblue&quot;, alpha = 0.6) + geom_density(color = &quot;red&quot;, size = 1) + theme_minimal() + labs(title = &quot;Histograma + Densidad de radius1&quot;, x = &quot;Radius1&quot;, y = &quot;Densidad&quot;) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. df %&gt;% ggplot(aes(x = &quot;&quot;, y = radius1)) + geom_boxplot(fill = &quot;#a6cee3&quot;, color = &quot;#1f78b4&quot;, outlier.color = &quot;red&quot;) + stat_summary( fun = mean, geom = &quot;point&quot;, shape = 20, size = 3, color = &quot;black&quot; ) + labs( title = &quot;Diagrama de cajas y bigotes de Radio1&quot;, x = &quot;&quot;, y = &quot;RADIO (MM)&quot; ) + theme_bw() Se puede observar cierta asimetría en los datos de la distribución radius1. Además, se aprecia un sesgo hacia la derecha y una cantidad significativa de valores atípicos altos, esto indica que la mayoría de los radios tienen un tamaño estándar, pero existen algunos valores excepcionalmente grandes. Estos casos atípicos influyen significativamente en la media y en la desviación estándar de la distribución. 5.2 Variables categóricas # Gráfico de barras básico ggplot(df, aes(x = Diagnosis)) + geom_bar(fill = &quot;orange&quot;, color = &quot;black&quot;) + theme_minimal() + labs(title = &quot;Distribución de Diagnósticos&quot;, x = &quot;Diagnóstico&quot;, y = &quot;Frecuencia&quot;) # Gráfico de barras con porcentajes df %&gt;% count(Diagnosis) %&gt;% mutate(pct = n / sum(n) * 100) %&gt;% ggplot(aes(x = Diagnosis, y = pct)) + geom_col(fill = &quot;steelblue&quot;) + geom_text(aes(label = paste0(round(pct,1), &quot;%&quot;)), vjust = -0.5) + theme_minimal() + labs(title = &quot;Porcentaje por Diagnóstico&quot;, x = &quot;Diagnóstico&quot;, y = &quot;Porcentaje&quot;) # Frecuencias relativas cat(&quot;Frecuencias relativas de diagnósticos:\\n&quot;) ## Frecuencias relativas de diagnósticos: print(prop.table(table(df$Diagnosis))) ## ## B M ## 0.6274165 0.3725835 La mayoría de los pacientes (62.7%) presentan tumores de tipo B (benignos), mientras que el 37.3% corresponde al tipo M (malignos). "],["análisis-bivariante.html", "Chapter 6 Análisis bivariante 6.1 Variable numérica vs. categórica 6.2 Variable numérica vs. numérica 6.3 Variable categórica vs. categórica", " Chapter 6 Análisis bivariante 6.1 Variable numérica vs. categórica # Boxplot ggplot(df, aes(x = Diagnosis, y = radius1)) + geom_boxplot(fill = &quot;lightgreen&quot;) + theme_minimal() + labs(title = &quot;radius1 según Diagnóstico&quot;, x = &quot;Diagnóstico&quot;, y = &quot;Radius1&quot;) # Violin plot ggplot(df, aes(x = Diagnosis, y = radius1)) + geom_violin(fill = &quot;violet&quot;, alpha = 0.6) + geom_boxplot(width = 0.1, fill = &quot;white&quot;, outlier.size = 0.5) + theme_minimal() + labs(title = &quot;Distribución de radius1 por Diagnóstico&quot;, x = &quot;Diagnóstico&quot;, y = &quot;Radius1&quot;) El gráfico compara el radio de los tumores B (benignos) y M (malignos). Se aprecia que, aunque la mayoría de los tumores son de tipo B, los de tipo M se concentran en valores significativamente más altos, incluso con datos extremos más elevados. Los tumores tipo B presentan una distribución más compacta, mientras que los tipo M muestran mayor variación en sus radios. Los primeros tienen un comportamiento más homogéneo, mientras que los segundos presentan mayor dispersión. Los puntos negros sobre las cajas (que representan valores atípicos) destacan la presencia de tumores excepcionalmente grandes, principalmente en los tipo M. En síntesis, los resultados sugieren que: Los tumores malignos (tipo M) tienden a tener radios mayores y mayor variabilidad Los benignos (tipo B) presentan un comportamiento más compacto y radios menores. 6.2 Variable numérica vs. numérica # Scatter plot básico ggplot(df, aes(x = radius1, y = area1)) + geom_point(alpha = 0.5, color = &quot;blue&quot;) + theme_minimal() + labs(title = &quot;Relación entre radius1 y area1&quot;, x = &quot;Radius1&quot;, y = &quot;Area1&quot;) # Scatter plot con regresión ggplot(df, aes(x = radius1, y = area1)) + geom_point(alpha = 0.5, color = &quot;blue&quot;) + geom_smooth(method = &quot;lm&quot;, color = &quot;red&quot;) + theme_minimal() + labs(title = &quot;Regresión radius1 vs area1&quot;, x = &quot;Radius1&quot;, y = &quot;Area1&quot;) ## `geom_smooth()` using formula = &#39;y ~ x&#39; # Correlación cat(&quot;Correlación entre radius1 y area1:&quot;, cor(df$radius1, df$area1), &quot;\\n&quot;) ## Correlación entre radius1 y area1: 0.9873572 # Mapa de correlaciones numeric_vars &lt;- df %&gt;% select(where(is.numeric), -ID) ggcorr(numeric_vars, label = TRUE, label_round = 2) + labs(title = &quot;Matriz de Correlaciones&quot;) Existe una relación evidente entre el radio1 y el área1, específicamente una correlación positiva: cuando el radio aumenta, el área también lo hace. La matriz de correlación muestra que hay pocas correlaciones negativas (ninguna significativa). En general, las variables presentan correlaciones positivas, evidenciado por el predominio del color rojo que indica valores cercanos a 1. Esto tiene sentido, ya que la mayoría están relacionadas con el tamaño. Como excepción, la variable textura muestra valores cercanos a 0, indicando que no tiene una correlación significativa con las demás variables. 6.3 Variable categórica vs. categórica # Tabla cruzada de diagnóstico con grupos de radius1 radius_groups &lt;- cut(df$radius1, breaks = 3, labels = c(&quot;Bajo&quot;, &quot;Medio&quot;, &quot;Alto&quot;)) tab &lt;- table(df$Diagnosis, radius_groups) cat(&quot;Tabla cruzada Diagnóstico vs Grupos de Radius1:\\n&quot;) ## Tabla cruzada Diagnóstico vs Grupos de Radius1: print(tab) ## radius_groups ## Bajo Medio Alto ## B 306 51 0 ## M 32 158 22 cat(&quot;\\nProporciones:\\n&quot;) ## ## Proporciones: print(prop.table(tab)) ## radius_groups ## Bajo Medio Alto ## B 0.53778559 0.08963093 0.00000000 ## M 0.05623902 0.27768014 0.03866432 # Heatmap tab_df &lt;- as.data.frame(tab) colnames(tab_df) &lt;- c(&quot;Diagnosis&quot;, &quot;RadiusGroup&quot;, &quot;Freq&quot;) ggplot(tab_df, aes(x = RadiusGroup, y = Diagnosis, fill = Freq)) + geom_tile(color = &quot;white&quot;) + scale_fill_gradient(low = &quot;white&quot;, high = &quot;red&quot;) + theme_minimal() + labs(title = &quot;Heatmap Diagnóstico vs Grupo de Radius1&quot;, x = &quot;Grupo de Radius1&quot;, y = &quot;Diagnóstico&quot;, fill = &quot;Frecuencia&quot;) El heatmap muestra la relación entre el diagnóstico de tumores benignos (B) y malignos (M) y su clasificación en grupos de Radius1 (Bajo, Medio y Alto), evidenciando que la mayor concentración de casos corresponde a tumores benignos con radios bajos, mientras que los malignos se presentan con mayor frecuencia en radios medios y en menor proporción en radios bajos; por otro lado, los tumores con radios altos son poco comunes en ambos diagnósticos, lo que sugiere que los radios pequeños predominan en los tumores benignos y que los malignos tienden a concentrarse más en radios intermedios que en extremos. "],["análisis-multivariante.html", "Chapter 7 Análisis multivariante 7.1 Análisis descriptivo detallado de variables numéricas 7.2 Análisis multivariante completo", " Chapter 7 Análisis multivariante 7.1 Análisis descriptivo detallado de variables numéricas # Cargar librerías adicionales si no están cargadas library(patchwork) ## Warning: package &#39;patchwork&#39; was built under R version 4.4.3 # Estadísticas descriptivas para radius1 df %&gt;% summarise( n = length(radius1), media = mean(radius1), ds = sd(radius1), mediana = median(radius1), minimo = min(radius1), maximo = max(radius1), Q1 = quantile(radius1, 0.25), Q3 = quantile(radius1, 0.75), IQR = IQR(radius1)) %&gt;% mutate(variable = &quot;radius1&quot;) -&gt; var_num_rad # Estadísticas descriptivas para texture1 df %&gt;% summarise( n = length(texture1), media = mean(texture1), ds = sd(texture1), mediana = median(texture1), minimo = min(texture1), maximo = max(texture1), Q1 = quantile(texture1, 0.25), Q3 = quantile(texture1, 0.75), IQR = IQR(texture1)) %&gt;% mutate(variable = &quot;texture1&quot;) -&gt; var_num_tex # Estadísticas descriptivas para perimeter1 df %&gt;% summarise( n = length(perimeter1), media = mean(perimeter1), ds = sd(perimeter1), mediana = median(perimeter1), minimo = min(perimeter1), maximo = max(perimeter1), Q1 = quantile(perimeter1, 0.25), Q3 = quantile(perimeter1, 0.75), IQR = IQR(perimeter1)) %&gt;% mutate(variable = &quot;perimeter1&quot;) -&gt; var_num_per # Combinar todas las estadísticas estadisticas_completas &lt;- bind_rows(var_num_rad, var_num_tex, var_num_per) %&gt;% select(variable, everything()) print(estadisticas_completas) ## variable n media ds mediana minimo maximo Q1 Q3 IQR ## 1 radius1 569 14.12729 3.524049 13.37 6.981 28.11 11.70 15.78 4.08 ## 2 texture1 569 19.28965 4.301036 18.84 9.710 39.28 16.17 21.80 5.63 ## 3 perimeter1 569 91.96903 24.298981 86.24 43.790 188.50 75.17 104.10 28.93 # Boxplot de radius1 p1 &lt;- df %&gt;% ggplot(aes(x=&quot;&quot;, y = radius1)) + geom_boxplot(fill = &quot;#1f77b4&quot;, alpha = 0.7) + labs( title = &quot;Distribución del Radio&quot;, y = &quot;RADIO (MM)&quot;, x = &quot;&quot; ) + theme_bw() # Boxplot de texture1 p2 &lt;- df %&gt;% ggplot(aes(x=&quot;&quot;, y = texture1)) + geom_boxplot(fill = &quot;#2ca02c&quot;, alpha = 0.7) + labs( title = &quot;Distribución de la Textura&quot;, y = &quot;TEXTURE (MM)&quot;, x = &quot;&quot; ) + theme_bw() # Boxplot de perimeter1 p3 &lt;- df %&gt;% ggplot(aes(x=&quot;&quot;, y = perimeter1)) + geom_boxplot(fill = &quot;#d62728&quot;, alpha = 0.7) + labs( title = &quot;Distribución del Perímetro&quot;, y = &quot;PERÍMETRO (MM)&quot;, x = &quot;&quot; ) + theme_bw() # Unir los tres gráficos en una sola visualización p1 + p2 + p3 Los diagramas de caja muestran la distribución de tres características de los tumores: radio, textura y perímetro. En general, las tres variables presentan una concentración central de valores con medianas alrededor de 14 mm para el radio, 18 mm para la textura y 90 mm para el perímetro. En los tres casos se observan valores atípicos hacia la parte superior, lo que indica la presencia de tumores con medidas considerablemente mayores al promedio, siendo más notorio en el radio y el perímetro. La dispersión es moderada y simétrica en el rango intercuartílico, lo que sugiere que la mayoría de los tumores tienen dimensiones relativamente homogéneas, mientras que los valores extremos corresponden a casos menos frecuentes con dimensiones significativamente más altas. 7.2 Análisis multivariante completo # Matriz de gráficos de dispersión numeric_vars &lt;- df %&gt;% select(where(is.numeric), -ID) ggpairs(numeric_vars, title = &quot;Matriz de Correlaciones y Distribuciones&quot;, lower = list(continuous = &quot;smooth&quot;), diag = list(continuous = &quot;densityDiag&quot;)) # Análisis de correlación específico para radius, texture y perimeter variables_principales &lt;- df %&gt;% select(radius1, texture1, perimeter1) cat(&quot;\\nMatriz de correlación entre variables principales:\\n&quot;) ## ## Matriz de correlación entre variables principales: print(round(cor(variables_principales), 3)) ## radius1 texture1 perimeter1 ## radius1 1.000 0.324 0.998 ## texture1 0.324 1.000 0.330 ## perimeter1 0.998 0.330 1.000 # Gráfico 3D conceptual usando scatterplot matrix ggpairs(variables_principales, title = &quot;Análisis Multivariante: Radio vs Textura vs Perímetro&quot;, lower = list(continuous = wrap(&quot;smooth&quot;, alpha = 0.3, size = 0.1)), diag = list(continuous = wrap(&quot;densityDiag&quot;, alpha = 0.5)), upper = list(continuous = wrap(&quot;cor&quot;, size = 4))) El análisis multivariante entre radio (radius1), textura (texture1) y perímetro (perimeter1) muestra que el radio y el perímetro están fuertemente correlacionados (r ≈ 0.998), lo que indica una relación casi lineal directa: a mayor radio, mayor perímetro. La textura presenta correlaciones positivas moderadas tanto con el radio (r ≈ 0.324) como con el perímetro (r ≈ 0.330), lo que sugiere que tumores con radios y perímetros mayores tienden a tener texturas algo más elevadas, aunque esta relación no es tan marcada. Las distribuciones individuales muestran que el radio y el perímetro tienen formas similares, mientras que la textura presenta una dispersión más amplia y simétrica. En conjunto, los resultados indican que el radio y el perímetro son casi equivalentes en comportamiento, mientras que la textura, aunque relacionada, aporta variabilidad independiente. "],["conclusiones.html", "Chapter 8 Conclusiones 8.1 Conclusiones preliminares: 8.2 Conclusiones post análisis 8.3 Próximos pasos recomendados:", " Chapter 8 Conclusiones 8.1 Conclusiones preliminares: El dataset contiene 569 observaciones y 12 variables (ID, Diagnosis y 10 predictoras numéricas). Las variables muestran diferentes patrones de correlación que podrían ser útiles para modelos predictivos. No se encontraron valores faltantes en el dataset. Se identificaron valores atípicos en varias variables numéricas. 8.2 Conclusiones post análisis El análisis revela que la mayoría de los pacientes presentan tumores benignos (62.7%), mientras que el 37.3% son malignos, observándose que los primeros predominan en radios bajos y tienen una distribución más compacta, mientras que los malignos tienden a concentrarse en radios medios, con mayor variabilidad y presencia de valores atípicos altos. Las distribuciones de radio, textura y perímetro muestran concentraciones centrales claras (14 mm, 18 mm y 90 mm, respectivamente) pero con casos excepcionales de gran tamaño, especialmente en radio y perímetro. Existe una correlación casi perfecta entre radio y perímetro (r ≈ 0.998) y correlaciones moderadas de la textura con ambas variables, mientras que la matriz de correlación evidencia en general relaciones positivas entre las variables asociadas al tamaño, siendo la textura la menos relacionada. Estos hallazgos sugieren que el tamaño del tumor, especialmente medido por radio y perímetro, es un factor clave de diferenciación entre tipos benignos y malignos, y que aunque la textura aporta información adicional, su influencia es menos marcada. 8.3 Próximos pasos recomendados: Ingeniería de características Selección de variables más relevantes Implementación de modelos de Machine Learning Validación cruzada y evaluación de rendimiento Interpretación de resultados clínicos Pruebas de normalidad: Shapiro–Wilk, Kolmogorov–Smirnov, Anderson–Darling Visualización de normalidad: histogramas, Q–Q plots, densidades "],["posibles-formas-de-proceder-con-la-solución-de-la-problemática.html", "Chapter 9 Posibles formas de proceder con la solución de la problemática 9.1 1. Preparación de datos para modelado 9.2 2. Desarrollo de modelos predictivos 9.3 3. Validación y evaluación 9.4 4. Implementación clínica", " Chapter 9 Posibles formas de proceder con la solución de la problemática Basándose en los resultados del análisis exploratorio de datos, se proponen las siguientes estrategias para abordar la problemática del diagnóstico de cáncer de mama: 9.1 1. Preparación de datos para modelado Normalización/Estandarización: Aplicar técnicas de escalado a las variables numéricas para homogeneizar sus rangos Ingeniería de características: Crear nuevas variables combinando las existentes (por ejemplo, ratios entre área y perímetro) Selección de características: Utilizar técnicas como PCA o selección basada en correlación para reducir redundancia 9.2 2. Desarrollo de modelos predictivos Modelos de clasificación supervisada: Regresión Logística Random Forest Support Vector Machine (SVM) Redes Neuronales XGBoost 9.3 3. Validación y evaluación Validación cruzada para evaluar la robustez de los modelos Métricas de evaluación: Precisión, Sensibilidad, Especificidad, AUC-ROC Análisis de importancia de variables para identificar los predictores más relevantes 9.4 4. Implementación clínica Desarrollo de una herramienta de apoyo al diagnóstico Validación con datos clínicos reales Capacitación del personal médico en el uso de la herramienta Este enfoque integral permitirá desarrollar una solución robusta y clínicamente útil para el diagnóstico temprano del cáncer de mama. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
